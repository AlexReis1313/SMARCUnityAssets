//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Smarc
{
    [Serializable]
    public class ExecutionStatusMsg : Message
    {
        public const string k_RosMessageName = "smarc_msgs/ExecutionStatus";
        public override string RosMessageName => k_RosMessageName;

        //  if true then the head of the execution_queue is currently being executed.
        public Std.HeaderMsg header;
        public bool currently_executing;
        public SMTaskMsg[] execution_queue;

        public ExecutionStatusMsg()
        {
            this.header = new Std.HeaderMsg();
            this.currently_executing = false;
            this.execution_queue = new SMTaskMsg[0];
        }

        public ExecutionStatusMsg(Std.HeaderMsg header, bool currently_executing, SMTaskMsg[] execution_queue)
        {
            this.header = header;
            this.currently_executing = currently_executing;
            this.execution_queue = execution_queue;
        }

        public static ExecutionStatusMsg Deserialize(MessageDeserializer deserializer) => new ExecutionStatusMsg(deserializer);

        private ExecutionStatusMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.currently_executing);
            deserializer.Read(out this.execution_queue, SMTaskMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.currently_executing);
            serializer.WriteLength(this.execution_queue);
            serializer.Write(this.execution_queue);
        }

        public override string ToString()
        {
            return "ExecutionStatusMsg: " +
            "\nheader: " + header.ToString() +
            "\ncurrently_executing: " + currently_executing.ToString() +
            "\nexecution_queue: " + System.String.Join(", ", execution_queue.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
