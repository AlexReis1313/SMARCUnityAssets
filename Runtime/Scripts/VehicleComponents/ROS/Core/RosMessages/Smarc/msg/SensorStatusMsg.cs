//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Smarc
{
    [Serializable]
    public class SensorStatusMsg : Message
    {
        public const string k_RosMessageName = "smarc_msgs/SensorStatus";
        public override string RosMessageName => k_RosMessageName;

        public const byte SENSOR_STATUS_NOT_ACTIVE = 0;
        public const byte SENSOR_STATUS_ACTIVE = 1;
        public const byte SENSOR_STATUS_ERROR = 2;
        public byte sensor_status;
        //  name of service to turn on and off the sensor
        public string service_name;
        //  optional diagnostics message
        public string diagnostics_message;

        public SensorStatusMsg()
        {
            this.sensor_status = 0;
            this.service_name = "";
            this.diagnostics_message = "";
        }

        public SensorStatusMsg(byte sensor_status, string service_name, string diagnostics_message)
        {
            this.sensor_status = sensor_status;
            this.service_name = service_name;
            this.diagnostics_message = diagnostics_message;
        }

        public static SensorStatusMsg Deserialize(MessageDeserializer deserializer) => new SensorStatusMsg(deserializer);

        private SensorStatusMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.sensor_status);
            deserializer.Read(out this.service_name);
            deserializer.Read(out this.diagnostics_message);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.sensor_status);
            serializer.Write(this.service_name);
            serializer.Write(this.diagnostics_message);
        }

        public override string ToString()
        {
            return "SensorStatusMsg: " +
            "\nsensor_status: " + sensor_status.ToString() +
            "\nservice_name: " + service_name.ToString() +
            "\ndiagnostics_message: " + diagnostics_message.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
